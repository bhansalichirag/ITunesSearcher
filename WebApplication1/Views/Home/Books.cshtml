@model List<WebApplication1.Models.SearchResult>

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
    <link rel="stylesheet" href="~/css/site.css">
    @{
    ViewData["Title"] = "Search Ebooks";
    }


    <h1 class="text-primary" style="text-align:center">Search Ebooks on ITunes</h1>

    <script>

        //Sort table based on the text string
        function sortTable(n) {
            var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
            table = document.getElementById("myTable");
            switching = true;
            dir = "asc";
            while (switching) {
                switching = false;
                rows = table.rows;
                for (i = 1; i < (rows.length - 1); i++) {
                    shouldSwitch = false;
                    x = rows[i].getElementsByTagName("TD")[n];
                    y = rows[i + 1].getElementsByTagName("TD")[n];
                    if (dir == "asc") {
                        if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
                            shouldSwitch = true;
                            break;
                        }
                    } else if (dir == "desc") {
                        if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {
                            shouldSwitch = true;
                            break;
                        }
                    }
                }
                if (shouldSwitch) {
                    rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                    switching = true;
                    switchcount++;
                } else {
                    if (switchcount == 0 && dir == "asc") {
                        dir = "desc";
                        switching = true;
                    }
                }
            }
        }

        //Sort table based on the integer, number value
        function sortTableNum(n) {
            var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
            table = document.getElementById("myTable");
            switching = true;
            // Set the sorting direction to ascending:
            dir = "asc";
            /* Make a loop that will continue until
            no switching has been done: */
            while (switching) {
                // Start by saying: no switching is done:
                switching = false;
                rows = table.rows;
                /* Loop through all table rows (except the
                first, which contains table headers): */
                for (i = 1; i < (rows.length - 1); i++) {
                    // Start by saying there should be no switching:
                    shouldSwitch = false;
                    /* Get the two elements you want to compare,
                    one from current row and one from the next: */
                    x = rows[i].getElementsByTagName("TD")[n];
                    y = rows[i + 1].getElementsByTagName("TD")[n];
                    /* Check if the two rows should switch place,
                    based on the direction, asc or desc: */
                    if (dir == "asc") {
                        if (Number(x.innerHTML) > Number(y.innerHTML)) {
                            // If so, mark as a switch and break the loop:
                            shouldSwitch = true;
                            break;
                        }
                    } else if (dir == "desc") {
                        if (Number(x.innerHTML) < Number(y.innerHTML)) {
                            // If so, mark as a switch and break the loop:
                            shouldSwitch = true;
                            break;
                        }
                    }
                }
                if (shouldSwitch) {
                    /* If a switch has been marked, make the switch
                    and mark that a switch has been done: */
                    rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                    switching = true;
                    // Each time a switch is done, increase this count by 1:
                    switchcount++;
                } else {
                    /* If no switching has been done AND the direction is "asc",
                    set the direction to "desc" and run the while loop again. */
                    if (switchcount == 0 && dir == "asc") {
                        dir = "desc";
                        switching = true;
                    }
                }
            }
        }

        //When the page is loaded
        $(document).ready(function () {
            var input = document.getElementById("queryid");

            //When the enter key is pressed
            input.addEventListener("keyup", function (event) {
                if (event.keyCode === 13) {
                    event.preventDefault();
                    document.getElementById("button1").click();
                }
            });
        });

        //Call the RecordClick action in Home controller for saving the link and name related data in the MS SQL Server
        function saveFunction(name, urllink) {
            $.ajax({
                url: '/Home/RecordClick',
                data: { str1: name.replaceAll("+", " "), str2: urllink }
            });
        }

        //Redirect to the iTunes link
        function redirectFunction(urllink) {
            window.open(urllink, '_blank');
        }

        //Replace artist with author word, bug in the iTunes link for ebook author
        function authorRedirectfunction(urllink) {
            window.open(urllink.replace("artist","author"), '_blank');
        }

        //For calling the HelloController API and getting the data
        function mainFunction() {
            var query = document.getElementById("queryid").value;
        
            if (query == "")
                alert("Enter some value");
            else {
                $("#tablebody").empty();
                $("#pid").empty();
                var counter = 0;
                var options = {};
                options.url = "/api/search/book/" + query;
                options.type = "GET";
                options.dataType = "json";
                options.success = function (data) {
                    data.forEach(function (element) {
                        counter++;
                        var trackURL = JSON.stringify(element.trackViewURL);
                        var artistURL = JSON.stringify(element.artistViewURL);
                        var imageURL = JSON.stringify(element.artworkUrl100);
                        $("#tablebody").append(
                            "<tr><td>" + JSON.stringify(element.trackName).replaceAll("\"","") + 
                            "</td><td><img class=\"zoom\" src="+ imageURL +" alt = \"No image\">" +
                            "</td><td>" + JSON.stringify(element.artistName).replaceAll("\"", "") +
                            "</td><td>" + JSON.stringify(element.averageUserRating) +
                            "</td><td>" + new Date(JSON.stringify(element.releaseDate)).toLocaleDateString() +
                            "</td><td>" + JSON.stringify(element.userRatingCount) +
                            "</td><td>" + JSON.stringify(element.price) +
                            "</td><td><a href=javascript:saveFunction(" + JSON.stringify(element.trackName).trim().replace(/ /g, "+") + "," + trackURL + ");redirectFunction(" + trackURL +
                            ");>Link</a></td><td><a href=javascript:saveFunction(" + JSON.stringify(element.artistName).trim().replace(/ /g, "+") + "," + artistURL + ");authorRedirectfunction(" + artistURL +
                            ");>Link</a></td></tr>")
                    });
                    document.getElementById("pid").innerHTML = counter+" records found";
                };
                options.error = function () {
                    $("#msg").html("Error while calling the Web API!");
                };
                $.ajax(options);
            }
            
        }

    </script>


    <div style="overflow-x:auto;" id="divid">

        <h4 style="text-align:center">Click Name,Author, Average User Rating, User Rating Count or Price headers to sort the table.</h4>
        <br /><br />
        <label>Enter your book name:</label>
        <input type="text" id="queryid" name="query" value="">

        <input type="button" class=btn-primary id="button1" onclick="mainFunction()" value="Search" />

        <br />
        <br />
        <table class="table table-bordered" id="myTable">
            <thead>
                <tr>
                    <th onclick="sortTable(0)">Book Name</th>
                    <th>Book Image</th>
                    <th onclick="sortTable(2)">Author</th>
                    <th onclick="sortTableNum(3)">Average User Rating</th>
                    <th>Release Date</th>
                    <th onclick="sortTableNum(5)">User Rating Count</th>
                    <th onclick="sortTableNum(6)">Price (in USD)</th>
                    <th>ITunes Book Link</th>
                    <th>ITunes Author Link</th>
                </tr>
            </thead>
            <tbody id="tablebody">
            </tbody>
        </table>
        <p id="pid" style="text-align:center"></p>
    </div>
