@model List<WebApplication1.Models.SearchResult>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
<link rel="stylesheet" href="~/css/site.css">
@{
    ViewData["Title"] = "Search MusicVideos";
}


<h1 class="text-primary" style="text-align:center">Search MusicVideos on ITunes</h1>

<script>

    //Sort table based on the text string
    function sortTable(n) {
        var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
        table = document.getElementById("myTable");
        switching = true;
        dir = "asc";
        while (switching) {
            switching = false;
            rows = table.rows;
            for (i = 1; i < (rows.length - 1); i++) {
                shouldSwitch = false;
                x = rows[i].getElementsByTagName("TD")[n];
                y = rows[i + 1].getElementsByTagName("TD")[n];
                if (dir == "asc") {
                    if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
                        shouldSwitch = true;
                        break;
                    }
                } else if (dir == "desc") {
                    if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {
                        shouldSwitch = true;
                        break;
                    }
                }
            }
            if (shouldSwitch) {
                rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                switching = true;
                switchcount++;
            } else {
                if (switchcount == 0 && dir == "asc") {
                    dir = "desc";
                    switching = true;
                }
            }
        }
    }

    //Sort table based on the integer, number value
    function sortTableNum(n) {
        var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
        table = document.getElementById("myTable");
        switching = true;
        // Set the sorting direction to ascending:
        dir = "asc";
        /* Make a loop that will continue until
        no switching has been done: */
        while (switching) {
            // Start by saying: no switching is done:
            switching = false;
            rows = table.rows;
            /* Loop through all table rows (except the
            first, which contains table headers): */
            for (i = 1; i < (rows.length - 1); i++) {
                // Start by saying there should be no switching:
                shouldSwitch = false;
                /* Get the two elements you want to compare,
                one from current row and one from the next: */
                x = rows[i].getElementsByTagName("TD")[n];
                y = rows[i + 1].getElementsByTagName("TD")[n];
                /* Check if the two rows should switch place,
                based on the direction, asc or desc: */
                if (dir == "asc") {
                    if (Number(x.innerHTML) > Number(y.innerHTML)) {
                        // If so, mark as a switch and break the loop:
                        shouldSwitch = true;
                        break;
                    }
                } else if (dir == "desc") {
                    if (Number(x.innerHTML) < Number(y.innerHTML)) {
                        // If so, mark as a switch and break the loop:
                        shouldSwitch = true;
                        break;
                    }
                }
            }
            if (shouldSwitch) {
                /* If a switch has been marked, make the switch
                and mark that a switch has been done: */
                rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                switching = true;
                // Each time a switch is done, increase this count by 1:
                switchcount++;
            } else {
                /* If no switching has been done AND the direction is "asc",
                set the direction to "desc" and run the while loop again. */
                if (switchcount == 0 && dir == "asc") {
                    dir = "desc";
                    switching = true;
                }
            }
        }
    }

        //When the page is loaded
        $(document).ready(function () {
            var input = document.getElementById("queryid");

            input.addEventListener("keyup", function (event) {
                if (event.keyCode === 13) {
                    event.preventDefault();
                    document.getElementById("button1").click();
                }
            });
        });


        function myFunction(name, urllink) {
            $.ajax({
                url: '/Home/RecordClick',
                data: { str1: name.replaceAll("+", " "), str2: urllink }
            });
        }

    function myFunction2(urllink) {
        window.open(urllink, '_blank');
        }

    function msToHMS(ms) {
        var seconds = ms / 1000;
        var hours = parseInt(seconds / 3600);
        seconds = seconds % 3600;
        var minutes = parseInt(seconds / 60);
        seconds = seconds % 60;
        return hours + " hours " + minutes + " minutes " + parseInt(seconds) + " seconds";
    }

        function hello1() {
            var query = document.getElementById("queryid").value;

            if (query == "")
                alert("Enter some value");
            else {
                $("#tablebody").empty();
                $("#pid").empty();
                var counter = 0;
                var options = {};
                options.url = "/api/search/musicVideo/" + query;
                options.type = "GET";
                options.dataType = "json";
                options.success = function (data) {
                    data.forEach(function (element) {
                        counter++;
                        var temp = JSON.stringify(element.trackViewURL);
                        var temp2 = JSON.stringify(element.artistViewURL);
                        var temp3 = JSON.stringify(element.artworkUrl100);
                        $("#tablebody").append(
                            "<tr><td>" + JSON.stringify(element.trackName) +
                            "</td><td><img class=\"zoom\" src=" + temp3 + " alt = \"No image\">" +
                            "</td><td>" + JSON.stringify(element.artistName) +
                            "</td><td>" + JSON.stringify(element.primaryGenreName) +
                            "</td><td>" + new Date(JSON.stringify(element.releaseDate)).toLocaleDateString() +
                            "</td><td>" + msToHMS(JSON.parse(element.trackTimeMillis)) +
                            "</td><td>" + JSON.stringify(element.trackPrice) +
                            "</td><td><a href=javascript:myFunction(" + JSON.stringify(element.trackName).trim().replace(/ /g, "+") + "," + temp + ");myFunction2(" + temp +
                            ");>Link</a></td><td><a href=javascript:myFunction(" + JSON.stringify(element.artistName).trim().replace(/ /g, "+") + "," + temp2 + ");myFunction2(" + temp2 +
                            ");>Link</a></td></tr>")
                    });
                    document.getElementById("pid").innerHTML = counter+" records found";
                };
                options.error = function () {
                    $("#msg").html("Error while calling the Web API!");
                };
                $.ajax(options);
            }

        }

</script>


<div style="overflow-x:auto;" id="divid">
    <br /><br />
          <label>Enter your MusicVideo name:</label>
    <input type="text" id="queryid" name="query" value="">

    <input type="button" class=btn-primary id="button1" onclick="hello1()" value="Search" />

    <br />
    <br />
    <table class="table table-bordered">
        <thead>
            <tr>
                <th onclick="sortTable(0)">MusicVideo Name</th>
                <th>MusicVideo Image</th>
                <th onclick="sortTable(2)">Artist</th>
                <th>Genre</th>
                <th>Release Date</th>
                <th>Time</th>
                <th onclick="sortTableNum(6)">Price (in USD)</th>
                <th>ITunes MusicVideo Link</th>
                <th>ITunes Artist Link</th>
            </tr>
        </thead>
        <tbody id="tablebody">
        </tbody>
    </table>
    <p id="pid" style="text-align:center"></p>
</div>
